:root {
  --chat-message-font-size: 16px;
}

.chatMessageItem {
  font-size: var(--chat-message-font-size);
  padding: 4px 12px 4px 16px;
  overflow-wrap: anywhere;
  border-radius: 4px;
  position: relative;
  background: var(--message-bg);
  line-height: 1.5;
  // box-sizing: border-box;
  // transform: translateZ(0);
  // backface-visibility: hidden;
  // will-change: transform, opacity;

  &:hover {
    .chatMessageActions {
      opacity: 1;
    }

    &:not(.highlighted) {
      background-color: var(--message-bg-hover) !important;
    }

    &.highlighted {
      position: relative;

      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: var(--message-bg-hover);
        pointer-events: none;
        border-radius: inherit;
      }
    }
  }

  &.emoteSetUpdate:hover {
    background: transparent !important;
  }

  &.old,
  &.deleted {
    .chatMessageReplyText,
    .chatMessageUser .chatroomBadgeIcon,
    .chatMessageUsername,
    .chatMessageTimestamp {
      opacity: 0.25;
    }

    .chatMessageContent {
      > div,
      > span,
      > a,
      > .chatroomEmoteWrapper {
        opacity: 0.25;
      }
    }

    &.highlighted {
      .chatMessageReplyText,
      .chatMessageUser .chatroomBadgeIcon,
      .chatMessageUsername,
      .chatMessageTimestamp {
        opacity: 0.5;
      }

      .chatMessageContent {
        > div,
        > span,
        > a,
        > .chatroomEmoteWrapper {
          opacity: 0.5;
        }
      }
    }
  }

  // Optimistic message states
  &.optimistic {
    // Use visual indicators instead of opacity to preserve readability
    border-left: 3px solid rgba(255, 255, 255, 0.3);
    background: rgba(255, 255, 255, 0.03) !important;
    
    // Add a subtle loading animation
    position: relative;
    
    &::before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 3px;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.6), transparent);
      animation: optimisticPulse 2s ease-in-out infinite;
    }
  }

  // Loading animation for optimistic messages
  @keyframes optimisticPulse {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 1; }
  }

  &.failed {
    opacity: 0.7;
    cursor: pointer;
    transition: all 0.2s ease;
    border-left: 3px solid #ff4444;
    background: rgba(255, 68, 68, 0.1) !important;
    
    // Add subtle red tint to text instead of aggressive filter
    .chatMessageContent,
    .chatMessageUsername,
    .chatMessageTimestamp {
      color: #ff6b6b !important;
    }

    &:hover {
      opacity: 0.9;
      background: rgba(255, 68, 68, 0.15) !important;
    }

    // Show retry button in action area for failed messages
    .chatMessageActions {
      opacity: 1; // Always show for failed messages
    }
  }

  &.dialogChatMessageItem {
    padding: 4px 16px;
  }
}

.systemMessage {
  opacity: 0.5;
}

/** [Reply Message] **/

.chatMessageReply {
  display: inline-flex;
  flex-direction: column;
  max-width: 100%;
  line-height: 24px;

  > .chatMessageReplyText {
    display: inline-flex;
    gap: 4px;
    opacity: 0.35;
    max-height: 24px;

    > .chatMessageReplyTextSender {
      flex: 1 0 auto;
      display: flex;
      flex-direction: row;
      align-items: center;
      gap: 4px;
      max-width: fit-content;
      font-weight: 600;
      font-size: 14px;

      .chatMessageReplyTextSenderUsername {
        color: var(--text-primary);
        text-decoration: none;
        font-size: 16px;
        background: none;
        border: none;
        font-weight: 700;
        cursor: pointer;
      }
    }

    > .chatMessageReplyTextContent {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      cursor: pointer;
    }

    > .chatMessageReplySymbol {
      width: 28px;
      height: 24px;
      top: 2.5px;
      position: relative;
      vertical-align: top;
    }
  }
}

/** [End of Reply Message] **/

/** [Message Item] **/

.chatMessageActions {
  position: absolute;
  right: 8px;
  top: -12px;
  opacity: 0;
  display: flex;
  gap: 1px;

  > button {
    display: flex;
    align-items: center;
    justify-content: center;
    background: none;
    border: 1px solid var(--border-primary);
    background-color: var(--bg-secondary);
    cursor: pointer;
    border-radius: 3px;
    padding: 4px;
    transition: background-color 0.2s ease;

    > img {
      opacity: 0.5;
      transition: opacity 0.2s ease;
    }

    &:hover {
      background-color: var(--bg-hover);
      opacity: 1;
    }
  }
}

.chatMessageContent {
  display: inline;
  color: var(--message-primary);
  overflow-wrap: anywhere;
  line-height: 1.5;
  vertical-align: middle;
  transition: opacity 0.2s ease;
  word-break: break-word;

  a {
    color: var(--text-accent);
  }
}

.chatMessageTimestamp {
  font-size: var(--chat-message-font-size);
  margin-right: 6px;
  opacity: 0.5;
  color: var(--text-primary);
}

.chatMessageUser {
  display: inline-flex;
  word-break: break-all;
  flex-wrap: nowrap;
  vertical-align: middle;

  > .chatMessageUsername {
    display: inline;
    font-weight: 800;
    cursor: pointer;
    background: none;
    border: none;
    font-size: var(--chat-message-font-size);
    cursor: pointer;
    vertical-align: middle;

    &.chatMessageUsernamePaint {
      background-color: currentColor;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      -webkit-background-clip: text;
      background-size: cover;
    }
  }
}

/** [End of Message Item] **/

/** [Mod Actions] **/

.quickModTools {
  display: inline-flex;
  gap: 0;
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 3px;
  margin-right: 4px;

  .quickModToolsBtn {
    display: flex;
    align-items: center;
    justify-content: center;
    background: none;
    cursor: pointer;
    background-color: transparent;
    padding: 4px;
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    transition: background-color 0.2s ease-in-out;

    &:last-child {
      border-right: none;
    }

    &.active {
      background-color: rgba(255, 255, 255, 0.07);

      img {
        opacity: 0.7;
      }
    }

    img {
      opacity: 0.2;
      transition: opacity 0.2s ease-in-out;
    }

    &:hover {
      background-color: rgba(255, 255, 255, 0.07);

      img {
        opacity: 0.7;
      }
    }
  }
}

.timeoutSlider {
  position: absolute;
  background: var(--bg-tertiary);
  backdrop-filter: blur(4px);
  border: 1px solid var(--border-primary);
  border-radius: 8px;
  padding: 12px;
  min-width: 220px;
  z-index: 100;
  box-shadow: var(--shadow-elevated);
  left: 8px;

  // Position above by default
  bottom: calc(100% + 8px);

  // If there's not enough space above, position below
  &.position-below {
    bottom: auto;
    top: calc(100% + 8px);
  }

  .timeoutSliderContent {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    gap: 8px;

    .timeoutSliderBody {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      width: 100%;
      gap: 16px;

      .timeoutSliderDuration {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: 8px;
        width: 100%;
        span {
          display: flex;
          align-items: center;
          justify-content: center;
          text-transform: capitalize;
          text-align: center;
          flex: 1 0 auto;
          font-size: 16px;
          color: var(--text-primary);
          font-weight: 500;
          padding: 4px 0;
          height: 32px;
          border-radius: 4px;
        }
      }

      .timeoutSliderInput {
        [role="slider"] {
          transition: all 0.15s ease;
          cursor: grab;

          &:hover {
            transform: scale(1.2);
          }

          &:active {
            cursor: grabbing;
            transform: scale(1.3);
          }
        }
      }

      .timeoutSliderButton {
        width: 80px;
        height: 32px;
        background: var(--btn-primary-bg);
        color: var(--btn-primary-text);
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 600;
        transition: all 0.2s ease;

        &:hover {
          background: var(--btn-primary-hover);
          transform: translateY(-1px);
        }

        &:active {
          background: var(--btn-primary-hover);
          transform: translateY(0);
        }
      }
    }
  }
}

/** [Badges] **/

.chatMessageBadges {
  display: inline-block;
  vertical-align: middle;

  > .chatroomBadge {
    display: inline-block;
    margin-right: 5px;

    > .chatroomBadgeIcon {
      width: calc(var(--chat-message-font-size) * (18 / 13));
      height: calc(var(--chat-message-font-size) * (18 / 13));
      vertical-align: middle;

      &[alt="d9"] {
        border-radius: 4px;
      }
    }
  }
}

/** [End of Badges] **/
/** [Emotes] **/

.kickEmote {
  width: inherit;
  height: inherit;
}

.stvEmote {
  display: inline-flex;
  margin: 0 auto;
  white-space: normal;
}

.chatroomEmoteWrapper {
  opacity: 1;
  position: relative;
  width: 100%;
  height: 100%;
  display: inline-grid;
  grid-column: 1;
  grid-row: 1;
  vertical-align: middle;
  // align-items: center;
  // justify-content: center;
  margin-left: 1px;
  margin-right: 1px;
  // overflow: clip;

  // flex-direction: row;
  // flex-shrink: 0;
}

.kickEmote {
  max-width: 124px;
}

.chatroomEmote {
  // top: 50%;
  // left: 0;
  // position: absolute;
  display: inline-grid;
  grid-column: 1;
  grid-row: 1;

  // width: inherit;
  // display: flex;
  // align-items: center;
  // justify-content: center;
  height: inherit;
  // transform: translate(0, -50%) rotate(0) skewX(0) skewY(0) scaleX(1) scaleY(1);

  &.zeroWidthEmote {
    pointer-events: none;
    width: 100%;
  }
}

/** [End of Emote] **/

/** [Mod Action Message] **/

.modActionMessage {
  background: -webkit-linear-gradient(45deg, var(--text-tertiary) 80%, var(--bg-overlay) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  font-weight: 600;
  letter-spacing: -0.05px;

  > span {
    font-weight: 800;
  }

  > button {
    border: none;
    font-weight: 700;
    cursor: pointer;
    background-color: rgba(255, 255, 255, 0.07);
    border-radius: 3px;
    font-size: 14px;
    padding: 2px 4px;
    color: rgba(255, 255, 255, 0.3);
    -webkit-background-clip: initial;
    -webkit-text-fill-color: initial;
    transition: all 0.2s ease-in-out;

    &:hover {
      background-color: rgba(255, 255, 255, 0.1);
      color: rgba(255, 255, 255, 0.7);
    }
  }
}

/** [End of Mod Action Message] **/
.tooltipItem {
  display: none;
  border-radius: 8px;
  position: fixed;
  background-color: var(--bg-overlay);
  border: 1px solid var(--border-primary);
  border-bottom-width: 2px;
  margin-bottom: 0;
  text-align: center;
  pointer-events: none;
  max-width: 250px;
  gap: 16px;
  z-index: 99;
}

.showTooltip {
  position: fixed;
  display: flex;
  flex-direction: column;
  padding: 0;
  min-width: 132px;
  min-height: min-content;
  z-index: 999;
  max-width: 250px;
  font-size: 18px;
  align-items: center;
  justify-content: center;
  padding: 16px;

  &.linkTooltip {
    .linkTooltipInfoHeader {
      > h5 {
        font-size: 14px;
        color: rgba(255, 255, 255, 0.7);
      }

      > span {
        font-size: 16px;
        color: rgba(255, 255, 255, 1);
      }
    }

    > img {
      width: 100%;
      height: 100%;
      border-radius: 4px;
      object-fit: contain;
    }
  }

  > img {
    height: 48px;
    width: max-content;
    object-fit: contain;
    display: block;
  }

  > span {
    font-size: 18px;
    display: block;
    width: 100%;
    text-align: center;
    margin: 0;
    padding: 0;
  }

  .tooltipItemInfo {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 8px;
    font-size: 18px;
    color: rgba(255, 255, 255, 0.7);
    .badgeTooltipPlatform {
      border: 1px solid rgba(255, 255, 255, 0.1);
      background-color: rgba(255, 255, 255, 0.1);
      margin-bottom: 4px;
      width: 100%;
      padding: 2px 8px;
      font-size: 14px;
      height: 20px;
      border-radius: 4px;
      color: rgba(255, 255, 255, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 4px;
    }
  }

  .tooltipItemCreatedBy {
    font-size: 14px;
    color: rgba(255, 255, 255, 0.7);

    > span {
      font-weight: 800;
    }
  }
}

.emoteTooltip {
  position: fixed;
  display: flex;
  flex-direction: column;
  padding: 0;
  min-width: 132px;
  z-index: 999;
  max-width: 300px;
  min-height: 132px;
  font-size: 18px;
  align-items: center;
  justify-content: center;
  opacity: 1;
  padding: 16px;

  .emoteTooltipOverlaidWrapper {
    background: rgba(255, 255, 255, 0.03);
    border: 1px solid rgba(255, 255, 255, 0.05);
    width: 100%;
    border-radius: 4px;
    margin-bottom: 12px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 8px 0;
    gap: 8px;
    font-size: 14px;
    color: rgba(255, 255, 255, 0.7);
  }

  &.linkTooltip {
    .linkTooltipInfoHeader {
      > h5 {
        font-size: 14px;
        color: rgba(255, 255, 255, 0.7);
      }

      > span {
        font-size: 16px;
        color: rgba(255, 255, 255, 1);
      }
    }

    > img {
      width: 100%;
      height: 100%;
      border-radius: 4px;
      object-fit: contain;
    }
  }

  > img {
    max-height: 65px;
    width: max-content;
    object-fit: contain;
    display: block;
  }

  > span {
    font-size: 18px;
    display: block;
    width: 100%;
    text-align: center;
    margin: 0;
    padding: 0;
  }

  .tooltipItemCreatedBy {
    font-size: 14px;
    color: rgba(255, 255, 255, 0.7);

    > span {
      font-weight: 800;
    }
  }
}

.emoteTooltipInfo {
  display: flex;
  flex-direction: column;
  gap: 4px;
  width: 100%;

  > p {
    margin: 0;
    padding: 0;
    font-size: 14px;
    color: rgba(255, 255, 255, 0.7);
    > span {
      font-weight: 700;
      overflow-wrap: break-word;
      word-wrap: break-word;
      word-break: break-word;
      color: rgba(255, 255, 255, 1);
    }
  }
}

.emoteTooltipInfoHeader {
  display: flex;
  flex-direction: column;
  gap: 4px;

  > span {
    font-weight: 700;
    font-size: 16px;
    color: rgba(255, 255, 255, 1);
  }

  > p {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 8px;
    font-size: 14px;
    color: rgba(255, 255, 255, 0.7);
  }

  .emoteTooltipPlatform {
    border: 1px solid rgba(255, 255, 255, 0.1);
    background-color: rgba(255, 255, 255, 0.05);
    margin-bottom: 4px;
    width: 100%;
    padding: 2px 8px;
    height: 24px;
    border-radius: 4px;
    color: rgba(255, 255, 255, 0.7);
    font-weight: 700;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 4px;
  }
}

/** [Emote Set Update Message] **/

.emoteSetUpdateMessage {
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding: 0;
  border-radius: 6px;
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-left: 4px solid rgba(255, 255, 255, 0.1);
  max-width: 100%;
  margin-bottom: 4px;
  transition: all 0.15s ease;

  &:hover {
    background: rgba(255, 255, 255, 0.05) !important;
  }

  .emoteSetUpdateHeader {
    font-weight: 600;
    color: #ffffff;
    font-size: 14px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 6px;
    padding: 8px 12px;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);

    img {
      width: 24px;
      height: 24px;
      object-fit: contain;
    }

    .emoteSetUpdateTags {
      display: flex;
      align-items: center;
      gap: 4px;
    }

    .emoteSetUpdateLabel {
      display: flex;
      align-items: center;
      gap: 4px;
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255, 255, 255, 0.05);
      padding: 2px 8px;
      font-size: 12px;
      text-transform: uppercase;
      border-radius: 4px;

      &.added {
        background: #059005;
      }

      &.removed {
        background: #af1f06;
      }

      &.updated {
        background: #052a88;
      }
    }
  }

  .emoteSetUpdateDetails {
    display: flex;
    flex-direction: column;
    gap: 4px;
    justify-content: center;
    padding: 0px 12px 8px 12px;
  }

  .emoteSetUpdateItem {
    display: flex;
    gap: 16px;
    align-items: center;

    .emoteSetUpdateLabel {
      font-weight: 600;
      min-width: 60px;
      flex-shrink: 0;
    }

    .emoteSetUpdateEmote {
      height: 40px;
      max-height: 40px;
      object-fit: contain;
    }

    .emoteSetUpdateEmoteInfo {
      display: flex;
      flex-direction: column;
      color: rgba(255, 255, 255, 0.7);
      width: 100%;

      &.updated {
        flex-direction: row;
        gap: 4px;

        .emoteSetUpdateEmoteNameSeparator {
          font-size: 16px;
          font-weight: 700;
          color: rgba(255, 255, 255, 0.7);
        }
      }

      .emoteSetUpdateEmoteName {
        font-weight: 700;
        font-size: 16px;
        display: flex;
        gap: 4px;
        color: rgba(255, 255, 255, 1);

        > span {
          font-weight: 400;
          opacity: 0.7;
          background: rgba(255, 255, 255, 0.05);
          padding: 2px 8px;
          border-radius: 4px;
        }
      }

      .emoteSetUpdateEmoteOwner {
        font-size: 14px;
        color: rgba(255, 255, 255, 0.7);
      }
    }

    .emoteSetUpdateEmotes {
      color: var(--text-primary);
      opacity: 0.9;
      word-break: break-word;
    }
  }
}

/** [End of Emote Set Update Message] **/
