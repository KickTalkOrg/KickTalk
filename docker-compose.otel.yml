services:
  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: kicktalk-otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./otel/collector-config.yml:/etc/otel-collector-config.yml:Z
      - ./otel/logs:/var/log/otel:Z
    user: "0:0"  # Run as root to avoid permission issues
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # Health check endpoint
    depends_on:
      - jaeger
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: kicktalk-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # Jaeger gRPC
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug

  # Prometheus for metrics storage
  prometheus:
    image: prom/prometheus:latest
    container_name: kicktalk-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./otel/prometheus.yml:/etc/prometheus/prometheus.yml:Z
      - prometheus_data:/prometheus
    user: "nobody"  # Use nobody user for security
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: kicktalk-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./otel/grafana/provisioning:/etc/grafana/provisioning:Z
      - ./otel/grafana/dashboards:/var/lib/grafana/dashboards:Z

  # Redis for caching telemetry data (optional)
  redis:
    image: redis:alpine
    container_name: kicktalk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  default:
    name: kicktalk-otel